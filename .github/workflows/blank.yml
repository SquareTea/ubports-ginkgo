# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  DEV_TARBALL_VARIANT: _usrmerge
  ROOTFS_URL: "https://ci.ubports.com/job/focal-hybris-rootfs-arm64/job/master/lastSuccessfulBuild/artifact/ubuntu-touch-android9plus-rootfs-arm64.tar.gz"
  OTA_CHANNEL: "20.04/arm64/android9plus/stable"
  
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-20.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - id: Build Kernel
      - name: Build
        run: | 
          sudo apt update
          sudo apt install android-tools-mkbootimg bc bison build-essential ca-certificates cpio curl flex git kmod libssl-dev libtinfo5 python2 sudo unzip wget xz-utils -y --no-install-recommends
          sudo ln -sf python2.7 /usr/bin/python
          sudo wget https://raw.githubusercontent.com/LineageOS/android_system_core/lineage-17.1/mkbootimg/mkbootimg.py -O /usr/bin/mkbootimg
          sudo chmod +x /usr/bin/mkbootimg
          git clone https://gitlab.com/ubports/community-ports/halium-generic-adaptation-build-tools build
          sudo -s ./build/build.sh
         
      - name: bootimg
        uses: actions/upload-artifact@master
        with:
          name: bootimg
          path: out/*
  
 # deploy-devel:
    #  runs-on: ubuntu-20.04
    # Steps represent a sequence of tasks that will be executed as part of the job
      - id: Deploying-DEV
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      #  - uses: actions/checkout@v3
      - name: deploy-devel
        run: |
            sudo apt update
            sudo apt install -y git img2simg jq sudo wget xz-utils
            sudo -s git clone https://gitlab.com/ubports/community-ports/halium-generic-adaptation-build-tools build
            DEVICE="$(source deviceinfo && echo $deviceinfo_codename)"
            sudo -s ./build/prepare-fake-ota.sh out/device_${DEVICE}${DEV_TARBALL_VARIANT}.tar.xz ota
            mkdir -p out
            sudo -s ./build/system-image-from-ota.sh ota/ubuntu_command out
    
      - name: upload devimg
        uses: actions/upload-artifact@master
        with:
            name: ubuntuimg
            path: |
               out/boot.img
               out/system.img
